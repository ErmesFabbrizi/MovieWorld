{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\39346\\\\Desktop\\\\Movie World\\\\movieworld-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode'; // Serve per decodificare il token\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = '694573141536-tp3qpdtg19e16d4rftikofrr40ovi4sc.apps.googleusercontent.com';\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const handleLoginSuccess = credentialResponse => {\n    console.log('Login Success:', credentialResponse);\n    // Decodifica il JWT per ottenere le informazioni dell'utente\n    const decoded = jwt_decode(credentialResponse.credential);\n    console.log('Decoded user:', decoded);\n    setUser(decoded);\n  };\n  const handleLoginFailure = error => {\n    console.log('Login Failed:', error);\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: clientId,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '50px'\n      },\n      children: !user ? /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleLoginSuccess,\n        onError: handleLoginFailure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Benvenuto, \", user.name, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.picture,\n          alt: \"Profile\",\n          style: {\n            borderRadius: '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GoogleOAuthProvider","GoogleLogin","jwt_decode","jsxDEV","_jsxDEV","clientId","App","_s","user","setUser","handleLoginSuccess","credentialResponse","console","log","decoded","credential","handleLoginFailure","error","children","style","textAlign","marginTop","onSuccess","onError","fileName","_jsxFileName","lineNumber","columnNumber","name","src","picture","alt","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/39346/Desktop/Movie World/movieworld-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google'; \nimport jwt_decode from 'jwt-decode';  // Serve per decodificare il token\n\nconst clientId = '694573141536-tp3qpdtg19e16d4rftikofrr40ovi4sc.apps.googleusercontent.com';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  const handleLoginSuccess = (credentialResponse) => {\n    console.log('Login Success:', credentialResponse);\n    // Decodifica il JWT per ottenere le informazioni dell'utente\n    const decoded = jwt_decode(credentialResponse.credential);\n    console.log('Decoded user:', decoded);\n    setUser(decoded);\n  };\n\n  const handleLoginFailure = (error) => {\n    console.log('Login Failed:', error);\n  };\n\n  return (\n    <GoogleOAuthProvider clientId={clientId}>\n      <div style={{ textAlign: 'center', marginTop: '50px' }}>\n        {!user ? (\n          <GoogleLogin\n            onSuccess={handleLoginSuccess}\n            onError={handleLoginFailure}\n          />\n        ) : (\n          <div>\n            <h1>Benvenuto, {user.name}!</h1>\n            <img src={user.picture} alt=\"Profile\" style={{ borderRadius: '50%' }} />\n          </div>\n        )}\n      </div>\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,qBAAqB;AACtE,OAAOC,UAAU,MAAM,YAAY,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAG,0EAA0E;AAE3F,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMW,kBAAkB,GAAIC,kBAAkB,IAAK;IACjDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,kBAAkB,CAAC;IACjD;IACA,MAAMG,OAAO,GAAGZ,UAAU,CAACS,kBAAkB,CAACI,UAAU,CAAC;IACzDH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,OAAO,CAAC;IACrCL,OAAO,CAACK,OAAO,CAAC;EAClB,CAAC;EAED,MAAME,kBAAkB,GAAIC,KAAK,IAAK;IACpCL,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEI,KAAK,CAAC;EACrC,CAAC;EAED,oBACEb,OAAA,CAACJ,mBAAmB;IAACK,QAAQ,EAAEA,QAAS;IAAAa,QAAA,eACtCd,OAAA;MAAKe,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAH,QAAA,EACpD,CAACV,IAAI,gBACJJ,OAAA,CAACH,WAAW;QACVqB,SAAS,EAAEZ,kBAAmB;QAC9Ba,OAAO,EAAEP;MAAmB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,gBAEFvB,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,GAAI,aAAW,EAACV,IAAI,CAACoB,IAAI,EAAC,GAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCvB,OAAA;UAAKyB,GAAG,EAAErB,IAAI,CAACsB,OAAQ;UAACC,GAAG,EAAC,SAAS;UAACZ,KAAK,EAAE;YAAEa,YAAY,EAAE;UAAM;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE1B;AAACpB,EAAA,CAhCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}