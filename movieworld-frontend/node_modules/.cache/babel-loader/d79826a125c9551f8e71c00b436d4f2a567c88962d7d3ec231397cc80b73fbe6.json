{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\39346\\\\Desktop\\\\Movie World - Copia\\\\movieworld-frontend\\\\src\\\\DettagliFilm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DettagliFilm({\n  apiKey\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [credits, setCredits] = useState(null);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n          params: {\n            api_key: apiKey\n          }\n        });\n        setMovie(response.data);\n        const creditsResponse = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits`, {\n          params: {\n            api_key: apiKey\n          }\n        });\n        setCredits(creditsResponse.data);\n      } catch (error) {\n        console.error('Errore nel caricamento dettagli film:', error);\n      }\n    };\n    fetchMovieDetails();\n  }, [id, apiKey]);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Caricamento dettagli...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"\\u2190 Torna indietro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), movie.poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w300${movie.poster_path}`,\n      alt: movie.title,\n      style: {\n        borderRadius: '8px',\n        marginTop: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Trama:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }, this), \" \", movie.overview]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Data di uscita:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }, this), \" \", movie.release_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Voto medio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }, this), \" \", movie.vote_average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), credits && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cast Principale:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: credits.cast.slice(0, 5).map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [actor.name, \" - \", actor.character]\n        }, actor.cast_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(DettagliFilm, \"Bhy7yMmq+7MJZR2tYXK06hOgqqM=\", false, function () {\n  return [useParams];\n});\n_c = DettagliFilm;\nexport default DettagliFilm;\nvar _c;\n$RefreshReg$(_c, \"DettagliFilm\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","DettagliFilm","apiKey","_s","id","movie","setMovie","credits","setCredits","fetchMovieDetails","response","get","params","api_key","data","creditsResponse","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","to","title","poster_path","src","alt","borderRadius","marginTop","overview","release_date","vote_average","cast","slice","map","actor","name","character","cast_id","_c","$RefreshReg$"],"sources":["C:/Users/39346/Desktop/Movie World - Copia/movieworld-frontend/src/DettagliFilm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction DettagliFilm({ apiKey }) {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [credits, setCredits] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovieDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\r\n          params: { api_key: apiKey }\r\n        });\r\n        setMovie(response.data);\r\n\r\n        const creditsResponse = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits`, {\r\n          params: { api_key: apiKey }\r\n        });\r\n        setCredits(creditsResponse.data);\r\n\r\n      } catch (error) {\r\n        console.error('Errore nel caricamento dettagli film:', error);\r\n      }\r\n    };\r\n\r\n    fetchMovieDetails();\r\n  }, [id, apiKey]);\r\n\r\n  if (!movie) return <div>Caricamento dettagli...</div>;\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <Link to=\"/\">‚Üê Torna indietro</Link>\r\n      <h1>{movie.title}</h1>\r\n      {movie.poster_path && (\r\n        <img src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`} alt={movie.title} style={{ borderRadius: '8px', marginTop: '20px' }} />\r\n      )}\r\n      <p><strong>Trama:</strong> {movie.overview}</p>\r\n      <p><strong>Data di uscita:</strong> {movie.release_date}</p>\r\n      <p><strong>Voto medio:</strong> {movie.vote_average}</p>\r\n\r\n      {credits && (\r\n        <>\r\n          <h3>Cast Principale:</h3>\r\n          <ul>\r\n            {credits.cast.slice(0, 5).map(actor => (\r\n              <li key={actor.cast_id}>{actor.name} - {actor.character}</li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DettagliFilm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,YAAYA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMgB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,sCAAsCP,EAAE,EAAE,EAAE;UAC3EQ,MAAM,EAAE;YAAEC,OAAO,EAAEX;UAAO;QAC5B,CAAC,CAAC;QACFI,QAAQ,CAACI,QAAQ,CAACI,IAAI,CAAC;QAEvB,MAAMC,eAAe,GAAG,MAAMnB,KAAK,CAACe,GAAG,CAAC,sCAAsCP,EAAE,UAAU,EAAE;UAC1FQ,MAAM,EAAE;YAAEC,OAAO,EAAEX;UAAO;QAC5B,CAAC,CAAC;QACFM,UAAU,CAACO,eAAe,CAACD,IAAI,CAAC;MAElC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D;IACF,CAAC;IAEDP,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACL,EAAE,EAAEF,MAAM,CAAC,CAAC;EAEhB,IAAI,CAACG,KAAK,EAAE,oBAAOP,OAAA;IAAAoB,QAAA,EAAK;EAAuB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAErD,oBACExB,OAAA;IAAKyB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAN,QAAA,gBAC9BpB,OAAA,CAACH,IAAI;MAAC8B,EAAE,EAAC,GAAG;MAAAP,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpCxB,OAAA;MAAAoB,QAAA,EAAKb,KAAK,CAACqB;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACrBjB,KAAK,CAACsB,WAAW,iBAChB7B,OAAA;MAAK8B,GAAG,EAAE,kCAAkCvB,KAAK,CAACsB,WAAW,EAAG;MAACE,GAAG,EAAExB,KAAK,CAACqB,KAAM;MAACH,KAAK,EAAE;QAAEO,YAAY,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAO;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACxI,eACDxB,OAAA;MAAAoB,QAAA,gBAAGpB,OAAA;QAAAoB,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACjB,KAAK,CAAC2B,QAAQ;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CxB,OAAA;MAAAoB,QAAA,gBAAGpB,OAAA;QAAAoB,QAAA,EAAQ;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACjB,KAAK,CAAC4B,YAAY;IAAA;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5DxB,OAAA;MAAAoB,QAAA,gBAAGpB,OAAA;QAAAoB,QAAA,EAAQ;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACjB,KAAK,CAAC6B,YAAY;IAAA;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEvDf,OAAO,iBACNT,OAAA,CAAAE,SAAA;MAAAkB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBxB,OAAA;QAAAoB,QAAA,EACGX,OAAO,CAAC4B,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAACC,KAAK,iBACjCxC,OAAA;UAAAoB,QAAA,GAAyBoB,KAAK,CAACC,IAAI,EAAC,KAAG,EAACD,KAAK,CAACE,SAAS;QAAA,GAA9CF,KAAK,CAACG,OAAO;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsC,CAC7D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,eACL,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CAnDQF,YAAY;EAAA,QACJP,SAAS;AAAA;AAAAgD,EAAA,GADjBzC,YAAY;AAqDrB,eAAeA,YAAY;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}